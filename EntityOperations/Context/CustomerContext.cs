// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using EntityOperations.Classes;

namespace EntityOperations
{
    public partial class CustomerContext : DbContext
    {
        public CustomerContext()
        {
        }

        public CustomerContext(DbContextOptions<CustomerContext> options) : base(options)
        {
        }

        public virtual DbSet<ContactTypes> ContactTypes { get; set; }
        public virtual DbSet<Customer> Customer { get; set; }
        public virtual DbSet<Genders> Genders { get; set; }
        public virtual DbSet<NewAccountTable> NewAccountTable { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer("Data Source=.\\SQLEXPRESS;Initial Catalog=CustomerDatabase;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity<ContactTypes>(entity =>
            {
                entity.HasKey(e => e.Identifier);

                entity.Property(e => e.ContactType).HasMaxLength(50);
            });

            modelBuilder.Entity<Customer>(entity =>
            {

                entity.Property(e => e.AccountNumber)
                    .ValueGeneratedOnAdd()
                    .HasValueGenerator<AccountGenerator>();

            });

            modelBuilder.Entity<Customer>(entity =>
            {
                entity.HasKey(e => e.Identifier)
                    .HasName("Customer$PrimaryKey");

                entity.Property(e => e.CompanyName).HasMaxLength(255);

                entity.Property(e => e.ContactName).HasMaxLength(255);

                entity.HasOne(d => d.ContactTypeIdentifierNavigation)
                    .WithMany(p => p.Customer)
                    .HasForeignKey(d => d.ContactTypeIdentifier)
                    .HasConstraintName("FK_Customer_ContactTypes");

                entity.HasOne(d => d.GenderIdentifierNavigation)
                    .WithMany(p => p.Customer)
                    .HasForeignKey(d => d.GenderIdentifier)
                    .HasConstraintName("FK_Customer_Genders");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);

    }
}